name: Run Pre-Commit Hooks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  pre-commit:
    name: Run Pre-Commit Hooks
    runs-on: [windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.5"
          terraform_wrapper: false

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: 'latest'

      - name: Verify tools are in PATH
        shell: pwsh
        run: |
          Write-Host "TFLint path: $(Get-Command tflint).Source"
          Write-Host "Terraform path: $(Get-Command terraform).Source"

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Initialize tflint
        run : tflint --init

      - name: Run pre-commit hooks and save output
        shell: bash
        run: |
          pre-commit run --all-files &> pre-commit.log
          exit_code=$?
          echo "Exit code: $exit_code"
          exit $exit_code

      - name: Upload log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pre-commit-log
          path: pre-commit.log

  extract-errors:
    name: Extract Errors from Logs on Failure
    needs: pre-commit
    if: failure()
    runs-on: ubuntu-latest

    steps:
      - name: Download logs
        uses: actions/download-artifact@v4
        with:
          name: pre-commit-log
          path: downloaded-logs

      - name: Extract error lines
        run: |
          echo "üîç Extracting errors from pre-commit logs..."
          cat downloaded-logs/pre-commit.log | grep -Ei 'error|fail|exception|not found|traceback|warning' || echo "No matching error lines found."
